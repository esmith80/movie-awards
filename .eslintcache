[{"/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/App.js":"1","/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/reportWebVitals.js":"2","/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/SearchList.jsx":"3","/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/index.js":"4","/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/SearchBar.jsx":"5","/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/SearchListItem.jsx":"6","/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/Banner.jsx":"7","/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/NominationListItem.jsx":"8","/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/NominationList.jsx":"9","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/reportWebVitals.js":"10","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/Banner.jsx":"11","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchListItem.jsx":"12","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/NominationList.jsx":"13","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/App.js":"14","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/index.js":"15","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBar.jsx":"16","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/NominationListItem.jsx":"17","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchList.jsx":"18","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBarResults.jsx":"19","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBarResultItem.jsx":"20"},{"size":4778,"mtime":1610937196581,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1610479682276,"results":"23","hashOfConfig":"22"},{"size":1077,"mtime":1610859096692,"results":"24","hashOfConfig":"22"},{"size":500,"mtime":1610479682274,"results":"25","hashOfConfig":"22"},{"size":868,"mtime":1610933336722,"results":"26","hashOfConfig":"22"},{"size":482,"mtime":1610933359359,"results":"27","hashOfConfig":"22"},{"size":264,"mtime":1610933269566,"results":"28","hashOfConfig":"22"},{"size":676,"mtime":1610924994268,"results":"29","hashOfConfig":"22"},{"size":646,"mtime":1610933319103,"results":"30","hashOfConfig":"22"},{"size":362,"mtime":1611957426100,"results":"31","hashOfConfig":"32"},{"size":265,"mtime":1612718922836,"results":"33","hashOfConfig":"32"},{"size":473,"mtime":1612718922838,"results":"34","hashOfConfig":"32"},{"size":666,"mtime":1612718922836,"results":"35","hashOfConfig":"32"},{"size":5258,"mtime":1613060629758,"results":"36","hashOfConfig":"32"},{"size":500,"mtime":1611957426100,"results":"37","hashOfConfig":"32"},{"size":2031,"mtime":1613059966148,"results":"38","hashOfConfig":"32"},{"size":687,"mtime":1612718922837,"results":"39","hashOfConfig":"32"},{"size":2630,"mtime":1613069763114,"results":"40","hashOfConfig":"32"},{"size":1637,"mtime":1613025467578,"results":"41","hashOfConfig":"32"},{"size":197,"mtime":1612972756099,"results":"42","hashOfConfig":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"185fle5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1xzeq7b",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/App.js",["93"],"import { React, useState, useEffect } from 'react';\nimport './App.css';\nimport SearchList from './SearchList';\nimport NominationList from './NominationList';\nimport SearchBar from './SearchBar';\nimport Banner from './Banner';\nconst axios = require('axios');\n\nfunction App() {\n  // localStorage will hold user's nomination if they've visited website before\n  // go through each item in local storage. if the key is an imdbID, put it in the nominees array  \n  const localNoms = [];\n  for (let i = 0; i < localStorage.length; i++) {\n    let key = localStorage.key(i);\n    let nom = localStorage[key];\n    if (key.match(/tt\\d{7}/g)) {\n      nom = JSON.parse(nom);\n      console.log('regex test worked');\n      localNoms.push(nom)\n    }\n  }\n\n  const [movies, setMovies] = useState({});\n  const [noResults, setNoResults] = useState(false);\n  const [lastSearchTerm, setLastSearchTerm] = useState('');\n  const [nominees, setNominees] = useState(localNoms.length ? localNoms : []);\n\n  const nominate = (Title, Year, imdbID, Poster) => {\n    const nominee = {\n      Title,\n      Year,\n      imdbID,\n      Poster\n    };\n    setNominees([...nominees, nominee]);\n\n    localStorage.setItem(imdbID, JSON.stringify(nominee));\n\n    for (let movie of movies) {\n      if (movie.imdbID === imdbID) {\n        movie.nominee = true;\n        break;\n      }\n    }\n  }\n\n  const remove = (idRemove) => {\n\n    for (let i = 0; i < localStorage.length; i++) {\n      let key = localStorage.key(i);\n      let nom = localStorage[key];\n      if (nom.includes(idRemove)) {\n        localStorage.removeItem(key);\n        break;\n      }\n    }\n\n    const newNomList = [];\n    for (let nominee of nominees) {\n      if (nominee.imdbID !== idRemove) {\n        newNomList.push(nominee);\n      }\n    }\n    if (movies.length) {\n      for (let movie of movies) {\n        if (movie.imdbID === idRemove) {\n          movie.nominee = false;\n          break;\n        }\n      }\n    }\n    setNominees(newNomList);\n  }\n\n  // get movies from database and set the results to searchResults\n  async function getMovies(searchTerm, pagesToReturn) {\n    // TODO add logic to return more than 1 page of results (IS this the right thing to do?) Would a user actually WANT to see more than 50 results?\n    const maxPages = 5;\n    try {\n      // TODO Hide API KEY\n      // the API only returns 10 results at a time, so to get more results, I will call it several times (maximum 5 times, set as maxPages)\n      const response = await axios.get(`https://www.omdbapi.com/?s=${searchTerm}&type=movie&apikey=bbde90f3`);\n      const totalResults = response.data.totalResults;\n      pagesToReturn = (pagesToReturn <= maxPages) ? pagesToReturn : maxPages;\n      pagesToReturn = (pagesToReturn <= totalResults) ? pagesToReturn : totalResults;\n\n      let movies = [];\n      for (let page = 1; page <= pagesToReturn; page++) {\n        const currentMovies = await axios.get(`https://www.omdbapi.com/?s=${searchTerm}&type=movie&page=${page}&apikey=bbde90f3`);\n        movies = movies.concat(currentMovies.data.Search);\n      }\n      for (let movie of movies) {\n        // TODO setting nominee causes console error and no results returned sometimes even though there should be results\n        if (movie) {\n          movie.nominee = false;\n          for (let nominee of nominees) {\n            if (movie.imdbID === nominee.imdbID) {\n              movie.nominee = true;\n            }\n          }\n        }\n      }\n      setMovies(movies);\n      setLastSearchTerm(searchTerm.replace('*', '').trim());\n      setNoResults(!movies.length);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Shoppies</h1>\n        <img\n          className='shoppies-logo'\n          src=\"https://cdn0.iconfinder.com/data/icons/social-line-transparent/50/Shopify-line-transparent-512.png\"\n          alt=\"shoppies-logo\"\n        />\n\n        <SearchBar getMovies={getMovies} />\n        {nominees.length === 5 ?\n          <Banner /> : null}\n      </header>\n\n      {nominees.length ?\n        <NominationList\n          className='nom-container'\n          remove={remove}\n          nominees={nominees}\n        /> :\n        <div className='nom-container'>\n          Your nominations will appear here.\n      </div>}\n      {movies.length ?\n        <SearchList\n          className='search-container'\n          nominate={nominate}\n          movies={movies}\n          maxNomsReached={nominees.length === 5}\n        /> :\n        noResults ?\n          <div className='search-container'>\n            Sorry, we could not find '{lastSearchTerm}'\n        </div> :\n          <div className='search-container'>\n            Search above to find movies!\n        </div>}\n    </div>\n  );\n}\n\nexport default App;\n",["94","95"],"/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/reportWebVitals.js",[],["96","97"],"/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/SearchList.jsx",[],["98","99"],"/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/index.js",[],"/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/SearchBar.jsx",[],["100","101"],"/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/SearchListItem.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/Banner.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/NominationListItem.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/shopify-front/src/NominationList.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/reportWebVitals.js",[],["102","103"],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/Banner.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchListItem.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/NominationList.jsx",[],["104","105"],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/App.js",["106"],"import { React, useState } from 'react';\nimport './App.css';\nimport SearchList from './SearchList';\nimport NominationList from './NominationList';\nimport SearchBar from './SearchBar';\nimport Banner from './Banner';\nconst axios = require('axios');\n\n\nfunction App() {\n  // localStorage will hold user's nomination if they've visited website before\n  // go through each item in local storage. if the key is an imdbID, put it in the nominees array  \n  const localNoms = [];\n  for (let i = 0; i < localStorage.length; i++) {\n    let key = localStorage.key(i);\n    let nom = localStorage[key];\n    if (key.match(/tt\\d{7}/g)) {\n      nom = JSON.parse(nom);\n      localNoms.push(nom)\n    }\n  }\n\n  const [movies, setMovies] = useState({});\n  const [noResults, setNoResults] = useState(false);\n  const [lastSearchTerm, setLastSearchTerm] = useState('');\n  const [nominees, setNominees] = useState(localNoms.length ? localNoms : []);\n  const [searchPage, setSearchPage] = useState(1);\n\n\n  const nominate = (Title, Year, imdbID, Poster) => {\n    const nominee = {\n      Title,\n      Year,\n      imdbID,\n      Poster\n    };\n    setNominees([...nominees, nominee]);\n\n    localStorage.setItem(imdbID, JSON.stringify(nominee));\n\n    for (let movie of movies) {\n      if (movie.imdbID === imdbID) {\n        movie.nominee = true;\n        break;\n      }\n    }\n  }\n\n  const remove = (idRemove) => {\n\n    for (let i = 0; i < localStorage.length; i++) {\n      let key = localStorage.key(i);\n      let nom = localStorage[key];\n      if (nom.includes(idRemove)) {\n        localStorage.removeItem(key);\n        break;\n      }\n    }\n\n    const newNomList = [];\n    for (let nominee of nominees) {\n      if (nominee.imdbID !== idRemove) {\n        newNomList.push(nominee);\n      }\n    }\n    if (movies.length) {\n      for (let movie of movies) {\n        if (movie.imdbID === idRemove) {\n          movie.nominee = false;\n          break;\n        }\n      }\n    }\n    setNominees(newNomList);\n  }\n\n  // get movies from database and set the results to searchResults\n  async function getMovies(searchTerm, pageToReturn) {\n    // the incoming pageToReturn informs us if the user has triggered a brand new search (even if the search is with the same search text as before)\n    if (pageToReturn === 1) {\n      setSearchPage(1);\n    }\n    try {\n      // TODO Hide API KEY\n      // the API only returns 10 results at a time\n      const response = await axios.get(`https://www.omdbapi.com/?s=${searchTerm}&type=movie&page=${pageToReturn}&apikey=bbde90f3`);\n      let searchResults = response.data.Search;\n      // TODO use the result count? total amount of results are known for a search term on the first query\n      const resultCount = response.data.totalResults;\n\n      for (let item of searchResults) {\n        // TODO setting nominee causes console error and no results returned sometimes even though there should be results\n        if (item) {\n          item.nominee = false;\n          for (let nominee of nominees) {\n            if (item.imdbID === nominee.imdbID) {\n              item.nominee = true;\n            }\n          }\n        }\n      }\n      setLastSearchTerm(searchTerm.replace('*', '').trim());\n      if (pageToReturn === 1) {\n        // TODO calling getMovies also sets the results in the search area - should getting the results and setting them be seperated as getting results can be used differently \n        setMovies(searchResults);\n\n      } else {\n        searchResults = movies.concat(searchResults);\n        setMovies(searchResults);\n      }\n      setNoResults(!searchResults.length);\n    } catch (error) {\n      // TODO console error if search results not iterable; need message to user that they've reached the end of the results\n      console.error(error);\n    }\n  }\n\n\n  console.log('APP RENDER')\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Shoppies</h1>\n        <img\n          className='shoppies-logo'\n          src=\"https://cdn0.iconfinder.com/data/icons/social-line-transparent/50/Shopify-line-transparent-512.png\"\n          alt=\"shoppies-logo\"\n        />\n\n        <SearchBar\n          getMovies={getMovies}\n          setMovies={setMovies}\n          searchPage={searchPage}\n          setSearchPage={setSearchPage} />\n\n\n        {nominees.length === 5 ?\n          <Banner /> : null}\n      </header>\n\n      {nominees.length ?\n        <NominationList\n          className='nom-container'\n          remove={remove}\n          nominees={nominees}\n        /> :\n        <div className='nom-container'>\n          Your nominations will appear here.\n      </div>}\n      {movies.length ?\n        <SearchList\n          className='search-container'\n          nominate={nominate}\n          movies={movies}\n          maxNomsReached={nominees.length === 5}\n          lastSearchTerm={lastSearchTerm}\n          getMovies={getMovies}\n          handlePageChange={(p) => {\n            setSearchPage(p);\n          }}\n          searchPage={searchPage}\n        /> :\n        noResults ?\n          <div className='search-container'>\n            Sorry, we could not find '{lastSearchTerm}'\n        </div> :\n          <div className='search-container'>\n            Search above to find movies!\n        </div>}\n    </div>\n  );\n}\n\nexport default App;\n",["107","108"],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/index.js",[],["109","110"],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBar.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/NominationListItem.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchList.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBarResults.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBarResultItem.jsx",[],{"ruleId":"111","severity":1,"message":"112","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"117","replacedBy":"120"},{"ruleId":"115","replacedBy":"121"},{"ruleId":"117","replacedBy":"122"},{"ruleId":"115","replacedBy":"123"},{"ruleId":"117","replacedBy":"124"},{"ruleId":"115","replacedBy":"125"},{"ruleId":"117","replacedBy":"126"},{"ruleId":"115","replacedBy":"127"},{"ruleId":"117","replacedBy":"128"},{"ruleId":"111","severity":1,"message":"129","line":89,"column":13,"nodeType":"113","messageId":"114","endLine":89,"endColumn":24},{"ruleId":"115","replacedBy":"130"},{"ruleId":"117","replacedBy":"131"},{"ruleId":"115","replacedBy":"132"},{"ruleId":"117","replacedBy":"133"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],["134"],["135"],["134"],["135"],["134"],["135"],["134"],["135"],"'resultCount' is assigned a value but never used.",["134"],["135"],["134"],["135"],"no-global-assign","no-unsafe-negation"]