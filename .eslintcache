[{"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/reportWebVitals.js":"1","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/App.js":"2","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/index.js":"3","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/NominationList.jsx":"4","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/NominationListItem.jsx":"5","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBarResultItem.jsx":"6","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBar.jsx":"7","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchListItem.jsx":"8","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchList.jsx":"9","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBarResults.jsx":"10","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/Banner.jsx":"11","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/helpers.js":"12"},{"size":362,"mtime":1611957426100,"results":"13","hashOfConfig":"14"},{"size":6761,"mtime":1620673528646,"results":"15","hashOfConfig":"14"},{"size":500,"mtime":1615232911251,"results":"16","hashOfConfig":"14"},{"size":606,"mtime":1614838187635,"results":"17","hashOfConfig":"14"},{"size":585,"mtime":1620661634252,"results":"18","hashOfConfig":"14"},{"size":624,"mtime":1615234816277,"results":"19","hashOfConfig":"14"},{"size":2835,"mtime":1620676317059,"results":"20","hashOfConfig":"14"},{"size":1010,"mtime":1620662053550,"results":"21","hashOfConfig":"14"},{"size":2634,"mtime":1620662009480,"results":"22","hashOfConfig":"14"},{"size":2862,"mtime":1620661959644,"results":"23","hashOfConfig":"14"},{"size":845,"mtime":1620661569953,"results":"24","hashOfConfig":"14"},{"size":611,"mtime":1614623686798,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1xzeq7b",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/reportWebVitals.js",[],["55","56"],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/App.js",["57","58"],"import { React, useState } from 'react';\nimport './App.css';\nimport SearchList from './SearchList';\nimport NominationList from './NominationList';\nimport SearchBar from './SearchBar';\nimport Banner from './Banner';\nimport removeCharsAndSpaces from './helpers';\nconst axios = require('axios');\n\n\nfunction App() {\n  // localStorage will hold user's nomination if they've visited website before\n  // go through each item in local storage. if the key is an imdbID, put it in the nominees array  \n  const localNoms = [];\n  for (let i = 0; i < localStorage.length; i++) {\n    let key = localStorage.key(i);\n    let nom = localStorage[key];\n    if (key.match(/tt\\d{7}/g)) {\n      nom = JSON.parse(nom);\n      localNoms.push(nom)\n    }\n  }\n\n  const [movies, setMovies] = useState({});\n  const [noResults, setNoResults] = useState(false);\n  const [lastSearchTerm, setLastSearchTerm] = useState('');\n  const [nominees, setNominees] = useState(localNoms.length ? localNoms : []);\n  const [searchPage, setSearchPage] = useState(1);\n  const [inSearchArea, setInSearchArea] = useState(false);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [onMobile, setOnMobile] = useState(navigator.maxTouchPoints);\n  const [showMessage, setShowMessage] = useState(true);\n  \n\n  const nominate = (Title, Year, imdbID, Poster) => {\n    const nominee = {\n      Title,\n      Year,\n      imdbID,\n      Poster\n    };\n    setNominees([...nominees, nominee]);\n\n    localStorage.setItem(imdbID, JSON.stringify(nominee));\n\n    for (let movie of movies) {\n      if (movie.imdbID === imdbID) {\n        movie.nominee = true;\n        break;\n      }\n    }\n  }\n\n  const remove = (idRemove) => {\n\n    for (let i = 0; i < localStorage.length; i++) {\n      let key = localStorage.key(i);\n      let nom = localStorage[key];\n      if (nom.includes(idRemove)) {\n        localStorage.removeItem(key);\n        break;\n      }\n    }\n\n    const newNomList = [];\n    for (let nominee of nominees) {\n      if (nominee.imdbID !== idRemove) {\n        newNomList.push(nominee);\n      }\n    }\n    if (movies.length) {\n      for (let movie of movies) {\n        if (movie.imdbID === idRemove) {\n          movie.nominee = false;\n          break;\n        }\n      }\n    }\n    setNominees(newNomList);\n  }\n\n  // get movies from database and set the results to searchResults\n  async function getMovies(searchTerm, pageToReturn) {\n    searchTerm = removeCharsAndSpaces(searchTerm, ['&', '-']);\n    setShowSearchResults(true);\n    // the incoming pageToReturn informs us if the user has triggered a brand new search (even if the search is with the same search text as before)\n    if (pageToReturn === 1) {\n      setSearchPage(1);\n    }\n    try {\n      // TODO Hide API KEY\n      // the API only returns 10 results at a time\n      const response = await axios.get(`https://www.omdbapi.com/?s=${searchTerm}&type=movie&page=${pageToReturn}&apikey=bbde90f3`);\n      let searchResults = response.data.Search;\n      // TODO use the result count? total amount of results are known for a search term on the first query\n      // const resultCount = response.data.totalResults;\n\n      // TODO if no results, search results is not iterable\n      for (let item of searchResults) {\n        // TODO setting nominee causes console error and no results returned sometimes even though there should be results\n        if (item) {\n          item.nominee = false;\n          for (let nominee of nominees) {\n            if (item.imdbID === nominee.imdbID) {\n              item.nominee = true;\n            }\n          }\n        }\n      }\n      setLastSearchTerm(searchTerm.replace('*', '').trim());\n      if (pageToReturn === 1) {\n        // TODO calling getMovies also sets the results in the search area - should getting the results and setting them be seperated as getting results can be used differently \n        setMovies(searchResults);\n\n      } else {\n        searchResults = movies.concat(searchResults);\n        setMovies(searchResults);\n      }\n      setNoResults(!searchResults.length);\n    } catch (error) {\n      // TODO console error if search results not iterable; need message to user that they've reached the end of the results\n      console.error(error);\n    }\n  }\n\n  return (\n    <div className=\"App\"\n      onClick={() => {\n        if (!inSearchArea && showSearchResults) {\n          window.scrollTo(0, 0);\n          setShowSearchResults(false);\n        }\n      }}>\n      <div className=\"left-curtains\" />\n      <div className=\"right-curtains\" />\n\n      {showMessage ? <Banner\n        setShowMessage={setShowMessage}\n      /> : null}\n\n\n      {/* {onMobile ? <div className=\"turnDeviceNotification\"></div> : null} */}\n      <div className=\"noms-title-search-container\">\n        <h1 className=\"title\">Shoppies</h1>\n        <SearchBar\n          setInSearchArea={setInSearchArea}\n          getMovies={getMovies}\n          setMovies={setMovies}\n          searchPage={searchPage}\n          setSearchPage={setSearchPage}\n          />\n      </div>\n          {showSearchResults ? <div></div> :\n            nominees.length === 5 ?\n            <div className=\"instructions-container\">\n              <div className=\"instructions\">\n                <h3>Your nominees!</h3>\n                <p>To choose a different movie, first remove one below.</p>\n              </div>\n              </div>\n              :\n              <div className=\"instructions-container\">\n              <div className=\"instructions\">\n                <p>Search above to find <strong>nominees</strong> for a Shoppie award.</p>\n                <h3>You have <span>{5 - nominees.length}</span> {5 - nominees.length === 1 ? \"nomination\" : \"nominations\"} left.</h3>\n              </div>\n              </div>\n          }\n\n\n\n      {\n        movies.length && showSearchResults ?\n        <SearchList\n        nominate={nominate}\n        remove={remove}\n        movies={movies}\n            maxNomsReached={nominees.length === 5}\n            lastSearchTerm={lastSearchTerm}\n            getMovies={getMovies}\n            setInSearchArea={setInSearchArea}\n            setShowSearchResults={setShowSearchResults}\n            handlePageChange={(p) => {\n              setSearchPage(p);\n            }}\n            searchPage={searchPage}\n          /> :\n          noResults ?\n          <div className='search-container'>\n              Sorry, we could not find '{lastSearchTerm}'\n        </div> :\n            <div className='search-container'></div>\n          }\n          {\n            nominees.length ?\n              <NominationList\n                className='nom-container'\n                remove={remove}\n                nominees={nominees}\n              /> :\n              <div className='nom-container'></div>\n          }\n\n    </div >\n  );\n}\n\nexport default App;\n","/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/index.js",[],["59","60"],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/NominationList.jsx",[],["61","62"],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/NominationListItem.jsx",[],["63","64"],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBarResultItem.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBar.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchListItem.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchList.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/SearchBarResults.jsx",["65","66"],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/Banner.jsx",[],"/Users/Edward/Documents/IT-Education/Projects/movie-awards/src/helpers.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":31,"column":10,"nodeType":"73","messageId":"74","endLine":31,"endColumn":18},{"ruleId":"71","severity":1,"message":"75","line":31,"column":20,"nodeType":"73","messageId":"74","endLine":31,"endColumn":31},{"ruleId":"67","replacedBy":"76"},{"ruleId":"69","replacedBy":"77"},{"ruleId":"67","replacedBy":"78"},{"ruleId":"69","replacedBy":"79"},{"ruleId":"67","replacedBy":"80"},{"ruleId":"69","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":34,"column":25,"nodeType":"84","endLine":34,"endColumn":29},{"ruleId":"82","severity":1,"message":"85","line":39,"column":26,"nodeType":"86","endLine":44,"endColumn":14},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'onMobile' is assigned a value but never used.","Identifier","unusedVar","'setOnMobile' is assigned a value but never used.",["87"],["88"],["87"],["88"],["87"],["88"],"react-hooks/exhaustive-deps","Assignments to the 'runNewTypeAhead' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'typeAheadTimeOut' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]